apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: '2022-08-11T20:14:38Z'
  generation: 10
  managedFields:
    - apiVersion: tekton.dev/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          .: {}
          'f:description': {}
          'f:params': {}
          'f:steps': {}
          'f:volumes': {}
          'f:workspaces': {}
      manager: Mozilla
      operation: Update
      time: '2022-08-11T20:26:13Z'
  name: my-skopeo-copy
  namespace: pipelines
  resourceVersion: '2754968'
  selfLink: /apis/tekton.dev/v1beta1/namespaces/pipelines/tasks/my-skopeo-copy
  uid: eef21c6f-ed1c-483f-b204-d8195240c39d
spec:
  description: >-
    Skopeo is a command line tool for working with remote image registries.
    Skopeo doesn’t require a daemon to be running while performing its
    operations. In particular, the handy skopeo command called copy will ease
    the whole image copy operation. The copy command will take care of copying
    the image from internal.registry to production.registry. If your production
    registry requires credentials to login in order to push the image, skopeo
    can handle that as well.
  params:
    - default: ''
      description: URL of the image to be copied to the destination registry
      name: srcImageURL
      type: string
    - default: ''
      description: URL of the image where the image from source should be copied to
      name: destImageURL
      type: string
    - default: 'true'
      description: Verify the TLS on the src registry endpoint
      name: srcTLSverify
      type: string
    - default: 'false'
      description: Verify the TLS on the dest registry endpoint
      name: destTLSverify
      type: string
    - default: quay-pull-secret
      description: secrets name to push image to quay
      name: quay-secret
      type: string
    - name: CONTEXT
      type: string
  steps:
    - image: >-
        registry.redhat.io/rhel8/skopeo@sha256:16a9e6d89dbc80cf88fece341e63b99239082aabf705cc014c6350a14fb29509
      name: skopeo-copy
      resources: {}
      script: >
        cat /etc/secret-volume/.dockerconfigjson

        export commitid=$(cat "$(params.CONTEXT)/commitid")

        echo $commitid

        skopeo copy "docker://$(params.srcImageURL):$commitid"
        "docker://$(params.destImageURL):$commitid"
        --src-tls-verify=$(params.srcTLSverify)
        --dest-tls-verify=$(params.destTLSverify)
        --authfile=/etc/secret-volume/.dockerconfigjson
      volumeMounts:
        - mountPath: /etc/secret-volume
          name: quay-auth-secret
          readOnly: true
      workingDir: $(workspaces.source.path)
  volumes:
    - name: quay-auth-secret
      secret:
        secretName: $(params.quay-secret)
  workspaces:
    - description: The workspace consisting of maven project.
      name: source
